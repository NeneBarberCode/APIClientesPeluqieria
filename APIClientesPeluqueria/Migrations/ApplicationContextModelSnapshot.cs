// <auto-generated />
using APIClientesPeluqueria.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIClientesPeluqueria.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIClientesPeluqueria.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("APIClientesPeluqueria.Models.CustomerHaircut", b =>
                {
                    b.Property<int>("CurtomerId")
                        .HasColumnType("int");

                    b.Property<int>("HairCutId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("CurtomerId", "HairCutId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("HairCutId");

                    b.ToTable("customerHaircuts");
                });

            modelBuilder.Entity("APIClientesPeluqueria.Models.HairCut", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hairCuts");
                });

            modelBuilder.Entity("APIClientesPeluqueria.Models.CustomerHaircut", b =>
                {
                    b.HasOne("APIClientesPeluqueria.Models.Customer", "Customer")
                        .WithMany("haircuts")
                        .HasForeignKey("CustomerId");

                    b.HasOne("APIClientesPeluqueria.Models.HairCut", "hairCut")
                        .WithMany("Customers")
                        .HasForeignKey("HairCutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("hairCut");
                });

            modelBuilder.Entity("APIClientesPeluqueria.Models.Customer", b =>
                {
                    b.Navigation("haircuts");
                });

            modelBuilder.Entity("APIClientesPeluqueria.Models.HairCut", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
